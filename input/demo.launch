<?xml version="1.0" encoding="utf-8"?>
<launch>
	<!-- start basic args -->
	<arg name="veh" default="$(env VEHICLE_NAME)"/>
	<arg name="config" default="baseline" />
	<arg name="param_file_name" default="default" />
	<arg name="apriltags_param_file_name" default="$(arg param_file_name)" />
	<arg name="fsm_file_name" default="default" />
	<arg name="visualization" default="true" />
	<arg name="verbose" default="false" />
	<arg name="statistics" default="false"/>
	<arg name="map_name" default="duckietown_map"/>
	<arg name="anti_instagram" default="true"/>
	<arg name="loc" default="-1"/>
	<arg name="line_detector_param_file_name" default="$(arg param_file_name)"/>
	<arg name="intersectionType" />
	<!-- end basic args -->

<!-- the things that are "on" by default:
 - camera stack (raw imagery defaults to false)
 - wheels stack
 - joystick stack
 - lane_following stack (old version of line detector only)
 - fsm
-->

<!-- general convention on remappings is that we remap the "subscribers" -->

	<!-- start switch args -->
	<arg name="camera" default="true"/>
	<arg name="/camera/raw" default="false"/>
	<arg name="/camera/cam_info" default="true"/>
	<arg name="/camera/raw/rect" default="false"/>
	<arg name="/camera/local" default="false" />

	<arg name="wheels" default="true"/>

	<arg name="joystick" default="true"/>

	<arg name="odometry" default="false"/>
	<arg name="/odometry/forward_kinematics" default="false"/>

	<arg name="lane_following" default="true"/>
	<arg name="/lane_following/line_detection" default="true"/>
	<arg name="/lane_following/ground_projection" default="true"/>
	<arg name="/lane_following/lane_filter" default="true"/>
	<arg name="/lane_following/stop_line_filter" default="true"/>
	<arg name="/lane_following/lane_controller" default="true"/>

	<arg name="fsm" default="true"/>

	<arg name="obstacle_avoidance" default="false"/>
	<arg name="/obstacle_avoidance/simple_stop" default="true"/>
	<arg name="/obstacle_avoidance/detection" default="true"/>
	<arg name="/obstacle_avoidance/safety" default="true"/>

	<arg name="vehicle_avoidance" default="false"/>
	<arg name="/vehicle_avoidance/detection" default="true" />
	<arg name="/vehicle_avoidance/control" default="true"/>

	<arg name="apriltags" default="false"/>
	<arg name="/apriltags/local" default="false" />


	<arg name="LED" default="true" />
	<arg name="/LED/pattern_switch" default="false" />
	<arg name="/LED/detector" default="false" />
	<arg name="/LED/joystick" default="false" />
	<arg name="/LED/emitter"  default="true" />
	<arg name="/LED/interpreter" default="false" />

	<arg name="odometry_learning" default="false"/>
	<arg name="/odometry_learning/kinematics" default="true"/>
	<arg name="/odometry_learning/learning"  default="false"/>
	<arg name="/odometry_learning/visual_odometry" default="false"/>

	<arg name="coordination" default="false"/>

	<arg name="navigation" default="false"/>
	<arg name="/navigation/intersection_control" default="true"/>
	<arg name="/navigation/apriltags_random" default="true"/>
	<arg name="/navigation/random_sr_turns" default="false"/>
	<arg name="/navigation/graph_planner" default="false"/>
	<!-- NOTE: either apriltags_random or graph_planner but not both -->

	<arg name="parallel_autonomy" default="false"/>

	<arg name="global_localizer" default="false"/>

	<arg name="SLAM" default="false"/>
	<arg name="localization" default="false"/>
	<arg name="/localization/local" default="false" />
	<arg name="/localization/map_name" default="open_house_dp6" />
	<arg name="/localization/gui" default="false"/>

	<!-- end switch args -->

	<!-- Enable statistics -->
	<param name="enable_statistics" value="$(arg statistics)"/>
	
	<!-- Start Camera -->
	<group if="$(arg camera)">
		<include  file="$(find pi_camera)/launch/camera_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>

		<!-- cam_info_reader_node -->
		<group if="$(arg /camera/cam_info)">
			<remap from="cam_info_reader_node/camera_info" to="camera_node/camera_info"/>
			<remap from="cam_info_reader_node/compressed_image" to="camera_node/image/compressed"/>
			<include file="$(find pi_camera)/launch/cam_info_reader_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/>
			</include>
		</group>


		<group if="$(arg /camera/raw)">

			<!-- decoder_node -->
			<remap from="decoder_node/compressed_image" to="camera_node/image/compressed"/>
			<remap from="decoder_node/image/raw" to="camera_node/image/raw"/>
			<include file="$(find pi_camera)/launch/decoder_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/>
				<arg name="local" value="$(arg /camera/local)" />
			</include>

			<!-- Raw camera_info_reader node -->
			<remap from="raw_cam_info_reader_node/camera_info" to="camera_node/raw_camera_info"/>
			<remap from="raw_cam_info_reader_node/compressed_image" to="camera_node/image/raw"/>
			<include file="$(find pi_camera)/launch/cam_info_reader_node.launch">
				<arg name="veh" value="$(arg veh)"/>
				<arg name="local" value="$(arg /camera/local)" />
				<arg name="config" value="$(arg config)"/>
				<arg name="param_file_name" value="$(arg param_file_name)"/>
				<arg name="node_name" value="raw_cam_info_reader_node" />
				<arg name="image_type" value="raw" />
			</include>

			<group if="$(arg /camera/raw/rect)">
				<!-- Rectification -->
				<remap from="image_raw" to="camera_node/image/raw"/>
				<remap from="camera_info" to="camera_node/raw_camera_info"/>
				<remap from="image_rect_color" to="camera_node/image/rect" />
				<include file="$(find pi_camera)/launch/image_proc_node.launch">
					<arg name="veh" value="$(arg veh)"/>
					<arg name="local" value="$(arg /camera/local)" />
				</include>
			</group>
		</group>
	</group>
	<!-- End Camera -->
	
	<!-- Start Wheels -->
	<group if="$(arg wheels)">

	    <remap from="inverse_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd" />
		<remap from="inverse_kinematics_node/car_cmd" to="car_cmd_switch_node/cmd"/>
		<remap from="inverse_kinematics_node/actuator_params_received" to="lane_controller_node/actuator_params_received" />
		<remap from="wheels_driver_node/radius_limit" to="lane_controller_node/radius_limit" />
		<include file="$(find dagu_car)/launch/inverse_kinematics_node.launch">
			<arg name="veh" value="$(arg veh)"/>
		</include>

		<!-- Wheel Driver -->
		<include file="$(find dagu_car)/launch/wheels_driver_node.launch">
			<arg name="veh" value="$(arg veh)"/>
		</include>


	</group>

	<!-- End Wheels -->

	<group if="$(arg odometry)">
		<group if="$(arg /odometry/forward_kinematics)">
				<remap from="forward_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd_executed" />
				<include file="$(find dagu_car)/launch/forward_kinematics_node.launch">
					<arg name="veh" value="$(arg veh)"/>
					<arg name="config" value="$(arg config)"/>
				</include>
				<!-- run the velocity_to_pose_node -->
				<remap from="velocity_to_pose_node/velocity" to="forward_kinematics_node/velocity" />
				<include file="$(find dagu_car)/launch/velocity_to_pose_node.launch">
					<arg name="veh" value="$(arg veh)"/>
					<arg name="config" value="$(arg config)"/>
				</include>
		</group>
	</group>


	<!-- Start Joystick -->
	<group if="$(arg joystick)">
		<!-- joy -->
		<include file="$(find joy_mapper)/launch/joy_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>

		<!-- joy_mapper -->
		<include file="$(find joy_mapper)/launch/joy_mapper_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>
	</group>
	<!-- End Joystick -->